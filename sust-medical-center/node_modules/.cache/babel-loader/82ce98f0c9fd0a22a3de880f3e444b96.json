{"ast":null,"code":"var _jsxFileName = \"F:\\\\DB project\\\\sust-medical-center-automation\\\\Client site\\\\sust-medical-center\\\\src\\\\Pages\\\\PatientNotification.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport PatientNavbar from \"./PatientNavbar\";\nimport Axios from \"axios\";\nimport Box from \"@mui/material/Box\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport logo from '../Images/Banner/sustlogo/logo.png';\nimport { container, listItem, typography } from \"./style\";\nimport { Container } from \"@mui/material\";\nimport MarkChatReadIcon from \"@mui/icons-material/MarkChatRead\";\nimport './PatientNotification.css';\nimport { jsPDF } from \"jspdf\";\nimport { IconButton, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, List, ListItem, Typography, Divider, Tooltip } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PatientNotification() {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [reg, setReg] = useState(\"\");\n  const [userList, setUserList] = useState([]);\n  const [userCList, setUserCList] = useState([]);\n  const [userAppList, setUserAppList] = useState([]);\n  const [firstName, setfirstName] = useState(\"\");\n  const [lastName, setlastName] = useState(\"\");\n  const [dept, setDept] = useState(\"\");\n  const [session, setSession] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [approvedlist, setApprovedlist] = useState([]);\n  const [clearancelist, setClearancelist] = useState([]);\n  const [authState, setAuthState] = useState({\n    username: \"\",\n    id: 0,\n    status: false\n  });\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/authen\", {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      if (response.data.error) {\n        //setAuthState(false);\n        setAuthState({ ...authState,\n          status: false\n        });\n      } else if (response.data.email != null) {\n        console.log(response); //setAuthState(false);\n        //setAuthState(true);\n        //console.log(a);\n\n        setAuthState({\n          username: response.data.username,\n          id: response.data.id,\n          status: true\n        });\n        setUsername(response.data.username);\n        console.log(authState);\n      } else {\n        //setAuthState(false);\n        setAuthState({ ...authState,\n          status: false\n        });\n      }\n    });\n  }, []);\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/fetchProfile\").then(response => {\n      setUserCList(response.data);\n      console.log(userCList.length);\n      {\n        userCList.map((val, key) => {\n          if (val.username == username) {\n            setReg(val.reg); //console.log(\"valo nei\");\n          }\n        });\n      } //console.log(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/fetchApproved\").then(response => {\n      setApprovedlist(response.data); //console.log(userList.length);\n\n      {\n        approvedlist.map((val, key) => {\n          if (val.reg == reg) {\n            Axios.get(\"http://localhost:3001/fetchClearance\").then(response => {\n              setClearancelist(response.data); //console.log(response.data);\n            });\n          }\n        });\n      } //console.log(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/fetchApproved\").then(response => {\n      setUserAppList(response.data);\n      console.log(userAppList.length);\n      {\n        userAppList.map((val, key) => {\n          if (val.reg == reg) {\n            setStatus(val.status);\n          }\n        });\n      } //console.log(response.data);\n    });\n  }, []); //DOWNLOAD PRESCRIPTION FUNCTION\n\n  const downloadPrescription = (firstName, lastName, dept, session) => {\n    var doc = new jsPDF();\n    doc.setFontSize(\"15\");\n    doc.addImage(logo, \"PNG\", 5, 5, 20, 15);\n    doc.text(\"Shahjalal University of Science and Technology\", 20, 30);\n    doc.text(\"Medical Clearance\", 20, 40);\n    doc.text(\"This is a medical clearance belongs to\", 20, 50);\n    doc.text(firstName + lastName, 20, 70);\n    doc.text(\"Who is a student of\" + dept, 50, 70);\n    doc.save(\"Clearance_Certificate.pdf\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PatientNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      sx: container,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        sx: typography,\n        children: \"Clearance Certificate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: clearancelist.map(val => {\n          if (val.reg == reg) {\n            return /*#__PURE__*/_jsxDEV(ListItem, {\n              sx: listItem,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: [\"Your medical clearance is approved!! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 56\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                size: \"small\",\n                startIcon: /*#__PURE__*/_jsxDEV(DownloadIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 22\n                }, this),\n                onClick: downloadPrescription(val.firstName, val.lastName, val.dept, val.session),\n                children: \"Mark as read\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PatientNotification, \"RntprXrVUcrPntueTvDM8DZvwBE=\");\n\n_c = PatientNotification;\nexport default PatientNotification;\n\nvar _c;\n\n$RefreshReg$(_c, \"PatientNotification\");","map":{"version":3,"sources":["F:/DB project/sust-medical-center-automation/Client site/sust-medical-center/src/Pages/PatientNotification.js"],"names":["React","useState","useEffect","PatientNavbar","Axios","Box","DownloadIcon","logo","container","listItem","typography","Container","MarkChatReadIcon","jsPDF","IconButton","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","List","ListItem","Typography","Divider","Tooltip","PatientNotification","username","setUsername","reg","setReg","userList","setUserList","userCList","setUserCList","userAppList","setUserAppList","firstName","setfirstName","lastName","setlastName","dept","setDept","session","setSession","status","setStatus","approvedlist","setApprovedlist","clearancelist","setClearancelist","authState","setAuthState","id","get","headers","accessToken","localStorage","getItem","then","response","data","error","email","console","log","length","map","val","key","downloadPrescription","doc","setFontSize","addImage","text","save"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState ,useEffect} from 'react';\r\nimport PatientNavbar from \"./PatientNavbar\";\r\nimport Axios from \"axios\";\r\nimport Box from \"@mui/material/Box\";\r\nimport DownloadIcon from \"@mui/icons-material/Download\";\r\nimport logo from '../Images/Banner/sustlogo/logo.png';\r\nimport { container, listItem, typography } from \"./style\";\r\nimport {  Container } from \"@mui/material\";\r\nimport MarkChatReadIcon from \"@mui/icons-material/MarkChatRead\";\r\nimport './PatientNotification.css';\r\n\r\nimport { jsPDF } from \"jspdf\";\r\nimport {\r\n    IconButton,\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    List,\r\n    ListItem,\r\n    Typography,\r\n    Divider,\r\n    Tooltip,\r\n  } from \"@mui/material\";\r\n\r\nfunction PatientNotification() {\r\n\r\n    const [username,setUsername] = useState(\"\");\r\n    const [reg,setReg] = useState(\"\");\r\n    const [userList, setUserList] = useState([]);\r\n    const [userCList, setUserCList] = useState([]);\r\n    const [userAppList, setUserAppList] = useState([]);\r\n    const [firstName, setfirstName] = useState(\"\");\r\n  const [lastName, setlastName] = useState(\"\");\r\n  \r\n  const [dept, setDept] = useState(\"\");\r\n  const [session, setSession] = useState(\"\");\r\n  const [status,setStatus] = useState(\"\");\r\n  const [approvedlist,setApprovedlist] = useState([]);\r\n  const [clearancelist,setClearancelist] = useState([]);\r\n\r\n\r\n\r\n    const [authState, setAuthState] = useState({\r\n        username: \"\",\r\n        id: 0,\r\n        status: false,\r\n       });\r\n    useEffect(() => {\r\n        Axios\r\n          .get(\"http://localhost:3001/authen\", {\r\n            headers: {\r\n              accessToken: localStorage.getItem(\"accessToken\"),\r\n            },\r\n          })\r\n          .then((response) => {\r\n            if (response.data.error) {\r\n              //setAuthState(false);\r\n              setAuthState({ ...authState, status: false })\r\n            } else if(response.data.email!= null)  {\r\n              console.log(response);\r\n              //setAuthState(false);\r\n              //setAuthState(true);\r\n              //console.log(a);\r\n              setAuthState({\r\n                username: response.data.username,\r\n                id: response.data.id,\r\n                status: true,\r\n              });\r\n              setUsername(response.data.username);\r\n              console.log(authState);\r\n              \r\n            }\r\n            else\r\n            {\r\n              //setAuthState(false);\r\n              setAuthState({ ...authState, status: false })\r\n            }\r\n          });\r\n      }, []);\r\n\r\n      useEffect(() => {\r\n        Axios.get(\"http://localhost:3001/fetchProfile\").then((response) => {\r\n          setUserCList(response.data);\r\n          console.log(userCList.length);\r\n          {userCList.map((val, key) => {\r\n            if(val.username == username)\r\n            {\r\n                setReg(val.reg);\r\n                //console.log(\"valo nei\");\r\n\r\n            }\r\n          }\r\n          )\r\n        }\r\n          \r\n          \r\n          //console.log(response.data);\r\n        });\r\n      },[]);\r\n\r\n\r\n\r\n      useEffect(() => {\r\n        Axios.get(\"http://localhost:3001/fetchApproved\").then((response) => {\r\n          setApprovedlist(response.data);\r\n          //console.log(userList.length);\r\n          {approvedlist.map((val, key) => {\r\n            if(val.reg == reg)\r\n            {\r\n               \r\n        Axios.get(\"http://localhost:3001/fetchClearance\").then((response) => {\r\n          setClearancelist(response.data);\r\n      \r\n        //console.log(response.data);\r\n        });\r\n\r\n\r\n            }\r\n          }\r\n          )\r\n        }\r\n          \r\n          \r\n          //console.log(response.data);\r\n        });\r\n      },[]);\r\n\r\n\r\n      useEffect(() => {\r\n        Axios.get(\"http://localhost:3001/fetchApproved\").then((response) => {\r\n          setUserAppList(response.data);\r\n          console.log(userAppList.length);\r\n          {userAppList.map((val, key) => {\r\n            if(val.reg == reg)\r\n            {\r\n                setStatus(val.status);\r\n\r\n            }\r\n          }\r\n          )\r\n        }\r\n          \r\n          \r\n          //console.log(response.data);\r\n        });\r\n      },[]);\r\n\r\n\r\n      //DOWNLOAD PRESCRIPTION FUNCTION\r\n  const downloadPrescription = (firstName , lastName , dept , session) => {\r\n    var doc = new jsPDF();\r\n    \r\n    doc.setFontSize(\"15\");\r\n    doc.addImage(logo, \"PNG\", 5, 5, 20, 15);\r\n    doc.text(\"Shahjalal University of Science and Technology\", 20, 30);\r\n    doc.text(\"Medical Clearance\", 20, 40);\r\n    doc.text(\"This is a medical clearance belongs to\", 20, 50);\r\n    doc.text(firstName+lastName, 20, 70);\r\n    doc.text(\"Who is a student of\"+dept, 50, 70);\r\n    \r\n    \r\n    doc.save(\"Clearance_Certificate.pdf\");\r\n  };\r\n\r\n\r\n\r\n      \r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <PatientNavbar/>\r\n   {/* <div>PatientNotification</div>\r\n    if(status==\"Approved\"){\r\n        \r\n        <div >\r\n          <div divBorder shadow-lg>\r\n          <h1>Clearance Application is approved!!</h1>\r\n          <div>\r\n            \r\n             {\"    \"}\r\n\r\n            <Button\r\n            onClick={downloadPrescription}\r\n            style={{\r\n                textTransform: \"none\",\r\n                margin: \"2%\",\r\n              }}\r\n              startIcon={<DownloadIcon />}\r\n              \r\n            >\r\n              Download\r\n            </Button>\r\n            </div>\r\n        </div>\r\n\r\n        </div>\r\n        \r\n\r\n    } */}\r\n     <Container maxWidth=\"lg\" sx={container}>\r\n        <Typography variant=\"h4\" align=\"center\" sx={typography}>\r\n          Clearance Certificate\r\n        </Typography>\r\n      \r\n        <List>\r\n          {clearancelist.map((val) => {\r\n            if(val.reg == reg){\r\n            return (\r\n              <ListItem sx={listItem}>\r\n                <Typography>\r\n                  Your medical clearance is approved!! <br />{\" \"}\r\n                  \r\n                </Typography>\r\n                <Button\r\n          variant=\"contained\"\r\n          size=\"small\"\r\n          startIcon={<DownloadIcon/>}\r\n          onClick={downloadPrescription(val.firstName,val.lastName,val.dept,val.session)}\r\n          \r\n        >\r\n          Mark as read\r\n        </Button>\r\n              </ListItem>\r\n            );\r\n\r\n                  }\r\n          })}\r\n        </List>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PatientNotification\r\n"]},"metadata":{},"sourceType":"module"}