{"ast":null,"code":"var _jsxFileName = \"F:\\\\DB project\\\\sust-medical-center-automation\\\\Client site\\\\sust-medical-center\\\\src\\\\Pages\\\\PatientNotification.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport PatientNavbar from \"./PatientNavbar\";\nimport Axios from \"axios\";\nimport Box from \"@mui/material/Box\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport { jsPDF } from \"jspdf\";\nimport { IconButton, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, List, ListItem, Typography, Divider, Tooltip } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PatientNotification() {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [reg, setReg] = useState(\"\");\n  const [userList, setUserList] = useState([]);\n  const [userCList, setUserCList] = useState([]);\n  const [userAppList, setUserAppList] = useState([]);\n  const [firstName, setfirstName] = useState(\"\");\n  const [lastName, setlastName] = useState(\"\");\n  const [dept, setDept] = useState(\"\");\n  const [session, setSession] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [authState, setAuthState] = useState({\n    username: \"\",\n    id: 0,\n    status: false\n  });\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/authen\", {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      if (response.data.error) {\n        //setAuthState(false);\n        setAuthState({ ...authState,\n          status: false\n        });\n      } else if (response.data.email != null) {\n        console.log(response); //setAuthState(false);\n        //setAuthState(true);\n        //console.log(a);\n\n        setAuthState({\n          username: response.data.username,\n          id: response.data.id,\n          status: true\n        });\n        setUsername(response.data.username);\n        console.log(authState);\n      } else {\n        //setAuthState(false);\n        setAuthState({ ...authState,\n          status: false\n        });\n      }\n    });\n  }, []);\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/fetchProfile\").then(response => {\n      setUserCList(response.data);\n      console.log(userCList.length);\n      {\n        userCList.map((val, key) => {\n          if (val.username == username) {\n            setReg(val.reg);\n          }\n        });\n      } //console.log(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/fetchClearance\").then(response => {\n      setUserList(response.data);\n      console.log(userList.length);\n      {\n        userList.map((val, key) => {\n          if (val.reg == reg) {\n            setfirstName(val.firstName);\n            setlastName(val.lastName);\n            setSession(val.session);\n            setDept(val.dept);\n          }\n        });\n      } //console.log(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/fetchApproved\").then(response => {\n      setUserAppList(response.data);\n      console.log(userAppList.length);\n      {\n        userAppList.map((val, key) => {\n          if (val.reg == reg) {\n            setStatus(val.status);\n          }\n        });\n      } //console.log(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PatientNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"PatientNotification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }, this), \"if(status==\\\"Approved\\\")\", /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: \"100%\"\n      },\n      marginTop: 10,\n      marginBottom: 8,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Clearance Application is approved!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"    \", /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              textTransform: \"none\",\n              margin: \"2%\"\n            },\n            startIcon: /*#__PURE__*/_jsxDEV(DownloadIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 26\n            }, this),\n            children: \"Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PatientNotification, \"nR12G1b+Rn4x1C8f76nBlCHKwHI=\");\n\n_c = PatientNotification;\nexport default PatientNotification;\n\nvar _c;\n\n$RefreshReg$(_c, \"PatientNotification\");","map":{"version":3,"sources":["F:/DB project/sust-medical-center-automation/Client site/sust-medical-center/src/Pages/PatientNotification.js"],"names":["React","useState","useEffect","PatientNavbar","Axios","Box","DownloadIcon","jsPDF","IconButton","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","List","ListItem","Typography","Divider","Tooltip","PatientNotification","username","setUsername","reg","setReg","userList","setUserList","userCList","setUserCList","userAppList","setUserAppList","firstName","setfirstName","lastName","setlastName","dept","setDept","session","setSession","status","setStatus","authState","setAuthState","id","get","headers","accessToken","localStorage","getItem","then","response","data","error","email","console","log","length","map","val","key","width","textTransform","margin"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState ,useEffect} from 'react';\r\nimport PatientNavbar from \"./PatientNavbar\";\r\nimport Axios from \"axios\";\r\nimport Box from \"@mui/material/Box\";\r\nimport DownloadIcon from \"@mui/icons-material/Download\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport {\r\n    IconButton,\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    List,\r\n    ListItem,\r\n    Typography,\r\n    Divider,\r\n    Tooltip,\r\n  } from \"@mui/material\";\r\n\r\nfunction PatientNotification() {\r\n\r\n    const [username,setUsername] = useState(\"\");\r\n    const [reg,setReg] = useState(\"\");\r\n    const [userList, setUserList] = useState([]);\r\n    const [userCList, setUserCList] = useState([]);\r\n    const [userAppList, setUserAppList] = useState([]);\r\n    const [firstName, setfirstName] = useState(\"\");\r\n  const [lastName, setlastName] = useState(\"\");\r\n  \r\n  const [dept, setDept] = useState(\"\");\r\n  const [session, setSession] = useState(\"\");\r\n  const [status,setStatus] = useState(\"\");\r\n\r\n\r\n\r\n    const [authState, setAuthState] = useState({\r\n        username: \"\",\r\n        id: 0,\r\n        status: false,\r\n       });\r\n    useEffect(() => {\r\n        Axios\r\n          .get(\"http://localhost:3001/authen\", {\r\n            headers: {\r\n              accessToken: localStorage.getItem(\"accessToken\"),\r\n            },\r\n          })\r\n          .then((response) => {\r\n            if (response.data.error) {\r\n              //setAuthState(false);\r\n              setAuthState({ ...authState, status: false })\r\n            } else if(response.data.email!= null)  {\r\n              console.log(response);\r\n              //setAuthState(false);\r\n              //setAuthState(true);\r\n              //console.log(a);\r\n              setAuthState({\r\n                username: response.data.username,\r\n                id: response.data.id,\r\n                status: true,\r\n              });\r\n              setUsername(response.data.username);\r\n              console.log(authState);\r\n              \r\n            }\r\n            else\r\n            {\r\n              //setAuthState(false);\r\n              setAuthState({ ...authState, status: false })\r\n            }\r\n          });\r\n      }, []);\r\n\r\n      useEffect(() => {\r\n        Axios.get(\"http://localhost:3001/fetchProfile\").then((response) => {\r\n          setUserCList(response.data);\r\n          console.log(userCList.length);\r\n          {userCList.map((val, key) => {\r\n            if(val.username == username)\r\n            {\r\n                setReg(val.reg);\r\n\r\n            }\r\n          }\r\n          )\r\n        }\r\n          \r\n          \r\n          //console.log(response.data);\r\n        });\r\n      },[]);\r\n\r\n\r\n\r\n      useEffect(() => {\r\n        Axios.get(\"http://localhost:3001/fetchClearance\").then((response) => {\r\n          setUserList(response.data);\r\n          console.log(userList.length);\r\n          {userList.map((val, key) => {\r\n            if(val.reg == reg)\r\n            {\r\n                setfirstName(val.firstName);\r\n                setlastName(val.lastName);\r\n                setSession(val.session);\r\n                setDept(val.dept);\r\n            }\r\n          }\r\n          )\r\n        }\r\n          \r\n          \r\n          //console.log(response.data);\r\n        });\r\n      },[]);\r\n\r\n\r\n      useEffect(() => {\r\n        Axios.get(\"http://localhost:3001/fetchApproved\").then((response) => {\r\n          setUserAppList(response.data);\r\n          console.log(userAppList.length);\r\n          {userAppList.map((val, key) => {\r\n            if(val.reg == reg)\r\n            {\r\n                setStatus(val.status);\r\n\r\n            }\r\n          }\r\n          )\r\n        }\r\n          \r\n          \r\n          //console.log(response.data);\r\n        });\r\n      },[]);\r\n\r\n\r\n\r\n      \r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <PatientNavbar/>\r\n    <div>PatientNotification</div>\r\n    if(status==\"Approved\"){\r\n        <Box sx={{ width: \"100%\" }} marginTop={10} marginBottom={8}>\r\n        <div >\r\n          <h1>Clearance Application is approved!!</h1>\r\n          <div>\r\n            \r\n             {\"    \"}\r\n\r\n            <Button\r\n            style={{\r\n                textTransform: \"none\",\r\n                margin: \"2%\",\r\n              }}\r\n              startIcon={<DownloadIcon />}\r\n              \r\n            >\r\n              Download\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        </Box>\r\n\r\n    }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PatientNotification\r\n"]},"metadata":{},"sourceType":"module"}