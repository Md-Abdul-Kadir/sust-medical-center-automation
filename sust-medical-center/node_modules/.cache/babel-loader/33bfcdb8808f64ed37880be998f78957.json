{"ast":null,"code":"var _jsxFileName = \"F:\\\\DB project\\\\sust-medical-center-automation\\\\Client site\\\\sust-medical-center\\\\src\\\\Pages\\\\PatientProfile.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"./navbar\";\nimport { Avatar, Container, Grid, Paper, Typography } from \"@mui/material\";\nimport { container, paper, avatar, upload } from \"./StylesProfile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Patient_Profile = () => {\n  /*const { currentUser } = useAuth();\r\n  const [patients, setPatients] = useState([]);\r\n    // FETCHING PATIENT'S DATA FROM DB\r\n  useEffect(() => {\r\n    db.collection(\"patients\").onSnapshot((snapshot) => {\r\n      setPatients(snapshot.docs.map((doc) => doc.data()));\r\n    });\r\n  }, []);*/\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      sx: container,\n      children: [\"return (\", /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: upload,\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              children: patient.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n              alt: \"Patient_Profile_Image\",\n              src: `${patient.imageURL}`,\n              sx: avatar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 8,\n          lg: 9,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: paper,\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              children: \"Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                fontStyle: \"italic\"\n              },\n              children: \"(You can update these details by going to the dashboard tab)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Name: \", patient.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Age: \", patient.age]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Gender: \", patient.gender]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Blood Group: \", patient.bloodGroup]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Address: \", patient.address1, \", \", patient.address2, \",\", \" \", patient.city, \", \", patient.state, \", \", patient.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Pincode: \", patient.pincode]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              children: [\"Last updated at:\", \" \", new Date(patient.updatedAt.seconds * 1000).toLocaleDateString(\"en-US\"), \", at\", \" \", new Date(patient.updatedAt.seconds * 1000).getHours(), \":\", new Date(patient.updatedAt.seconds * 1000).getMinutes(), \" \", \"hrs\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 2,\n              display: \"flex\",\n              flexDirection: \"column\",\n              height: 275\n            },\n            children: /*#__PURE__*/_jsxDEV(BPGraph, {\n              uid: patient.uid\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 2,\n              display: \"flex\",\n              flexDirection: \"column\",\n              height: 275\n            },\n            children: /*#__PURE__*/_jsxDEV(WeightGraph, {\n              uid: patient.uid\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }, this), \");\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Patient_Profile;\nexport default Patient_Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Patient_Profile\");","map":{"version":3,"sources":["F:/DB project/sust-medical-center-automation/Client site/sust-medical-center/src/Pages/PatientProfile.js"],"names":["React","useState","useEffect","Navbar","Avatar","Container","Grid","Paper","Typography","container","paper","avatar","upload","Patient_Profile","patient","name","imageURL","fontStyle","age","gender","bloodGroup","address1","address2","city","state","country","pincode","Date","updatedAt","seconds","toLocaleDateString","getHours","getMinutes","p","display","flexDirection","height","uid"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Navbar from \"./navbar\";\r\nimport { Avatar, Container, Grid, Paper, Typography } from \"@mui/material\";\r\nimport { container, paper, avatar, upload } from \"./StylesProfile\";\r\n\r\n\r\nconst Patient_Profile = () => {\r\n  /*const { currentUser } = useAuth();\r\n  const [patients, setPatients] = useState([]);\r\n\r\n  // FETCHING PATIENT'S DATA FROM DB\r\n  useEffect(() => {\r\n    db.collection(\"patients\").onSnapshot((snapshot) => {\r\n      setPatients(snapshot.docs.map((doc) => doc.data()));\r\n    });\r\n  }, []);*/\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Container maxWidth=\"lg\" sx={container}>\r\n      {/* {patients.map((patient) => {\r\n          if (patient.uid === currentUser.uid) */}\r\n            return (\r\n              <Grid container spacing={3}>\r\n                {/* PATIENT'S PROFILE IMAGE */}\r\n                <Grid item xs={12} md={4} lg={3}>\r\n                  <Paper sx={upload}>\r\n                    <Title>{patient.name}</Title>\r\n                    <Avatar\r\n                      alt=\"Patient_Profile_Image\"\r\n                      src={`${patient.imageURL}`}\r\n                      sx={avatar}\r\n                    />\r\n                  </Paper>\r\n                </Grid>\r\n\r\n                {/* PATIENT'S PROFILE */}\r\n                <Grid item xs={12} md={8} lg={9}>\r\n                  <Paper sx={paper}>\r\n                    <Title>Profile</Title>\r\n                    <Typography sx={{ fontStyle: \"italic\" }}>\r\n                      (You can update these details by going to the dashboard\r\n                      tab)\r\n                    </Typography>\r\n                    <Typography>Name: {patient.name}</Typography>\r\n                    <Typography>Age: {patient.age}</Typography>\r\n                    <Typography>Gender: {patient.gender}</Typography>\r\n                    <Typography>Blood Group: {patient.bloodGroup}</Typography>\r\n                    <Typography>\r\n                      Address: {patient.address1}, {patient.address2},{\" \"}\r\n                      {patient.city}, {patient.state}, {patient.country}\r\n                    </Typography>\r\n                    <Typography>Pincode: {patient.pincode}</Typography>\r\n                    <Typography variant=\"subtitle2\">\r\n                      Last updated at:{\" \"}\r\n                      {new Date(\r\n                        patient.updatedAt.seconds * 1000\r\n                      ).toLocaleDateString(\"en-US\")}\r\n                      , at{\" \"}\r\n                      {new Date(patient.updatedAt.seconds * 1000).getHours()}:\r\n                      {new Date(patient.updatedAt.seconds * 1000).getMinutes()}{\" \"}\r\n                      hrs\r\n                    </Typography>\r\n                  </Paper>\r\n                </Grid>\r\n\r\n                {/* GRAPHS */}\r\n                <Grid item xs={12}>\r\n                  <Paper\r\n                    sx={{\r\n                      p: 2,\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                      height: 275,\r\n                    }}\r\n                  >\r\n                    <BPGraph uid={patient.uid} />\r\n                  </Paper>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <Paper\r\n                    sx={{\r\n                      p: 2,\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                      height: 275,\r\n                    }}\r\n                  >\r\n                    <WeightGraph uid={patient.uid} />\r\n                  </Paper>\r\n                </Grid>\r\n              </Grid>\r\n            );\r\n        \r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Patient_Profile;"]},"metadata":{},"sourceType":"module"}